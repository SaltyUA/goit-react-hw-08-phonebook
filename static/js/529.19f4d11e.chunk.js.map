{"version":3,"file":"static/js/529.19f4d11e.chunk.js","mappings":"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","sources":["components/form/Form.styled.js","components/contactItem/index.jsx","components/filterInput/FilterContainer.styled.js","components/filterInput/index.jsx","components/contactList/index.jsx","components/form/index.jsx","pages/contacts.jsx"],"sourcesContent":["const { default: styled } = require('styled-components');\n\nexport const FormContainer = styled('form')(() => ({\n  paddingTop: 20,\n  margin: '0 auto',\n  border: '1px solid black',\n  borderRadius: 5,\n  padding: 10,\n  display: 'flex',\n  flexDirection: 'column',\n  maxWidth: 300,\n}));\n\nexport const FormWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled('input')(() => ({\n  borderRadius: 5,\n  boxShadow: 'box-shadow: inset 10px -10px 30px 0px rgba(0,0,0,0.75)',\n  padding: '5px 10px',\n}));\n\nexport const LabelTypography = styled('label')(() => ({\n  fontWeight: 700,\n  marginBottom: 5,\n}));\n\nexport const SubmitButton = styled.button`\n  margin-left: auto;\n  padding: 5px 10px;\n  font-weight: 600;\n  border-radius: 10px;\n  &:hover {\n    background-color: green;\n    color: #fff;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/contacts/thunks';\n\nconst ContactItem = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"fw-medium\">\n        {name} : {number}\n      </span>\n      <button\n        className=\"btn btn-danger ms-4\"\n        onClick={handleDelete}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","const { default: styled } = require('styled-components');\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const TextTypography = styled.p`\n  font-weight: 500;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterContainer, TextTypography } from './FilterContainer.styled';\nimport { Input } from 'components/form/Form.styled';\nimport { selectFilter } from 'store/selectors';\nimport { setFilter } from 'store/filter/slice';\n\n// Input in ContactList for filtering contacts\nconst FilterInput = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = ({ target: { value } }) =>\n    dispatch(setFilter(value.trim()));\n\n  return (\n    <FilterContainer>\n      <TextTypography>Find contacts by name</TextTypography>\n      <Input\n        onChange={handleFilter}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </FilterContainer>\n  );\n};\n\nexport default FilterInput;\n","import ContactItem from 'components/contactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'store/selectors';\nimport FilterInput from 'components/filterInput';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'store/contacts/thunks';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <FilterInput />\n      {contacts.length > 0 ? (\n        <ul className=\"d-flex flex-column justify-content-center align-items-center gap-2\">\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem name={name} key={id} number={number} id={id} />\n          ))}\n        </ul>\n      ) : (\n        <p>Have no any contacts</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport {\n  FormContainer,\n  FormWrap,\n  LabelTypography,\n  Input,\n  SubmitButton,\n} from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'store/selectors';\nimport { addContact } from 'store/contacts/thunks';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'name') setName(value);\n    else setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let isExist = contacts\n      ? contacts.some(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      : false;\n    if (isExist) {\n      window.alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormWrap>\n        <LabelTypography htmlFor=\"name\">Name</LabelTypography>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormWrap>\n      <FormWrap>\n        <LabelTypography htmlFor=\"number\">Number</LabelTypography>\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormWrap>\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </FormContainer>\n  );\n};\n\nexport default Form;\n","import ContactList from 'components/contactList';\nimport Form from 'components/form';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { selectIsLoggedIn } from 'store/selectors';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    !isLoggedIn && navigate('/');\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <div>\n      <h2 className=\"text-primary mb-4\">Add contact</h2>\n      <Form />\n      <h2 className=\"text-primary mb-4 mt-4\">Contacts</h2>\n      <ContactList />\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["styled","require","default","FormContainer","paddingTop","margin","border","borderRadius","padding","display","flexDirection","maxWidth","FormWrap","div","_templateObject","_taggedTemplateLiteral","Input","boxShadow","LabelTypography","fontWeight","marginBottom","SubmitButton","button","_templateObject2","_ref","name","id","number","dispatch","useDispatch","_jsxs","className","children","_jsx","onClick","deleteContact","type","FilterContainer","TextTypography","p","filter","useSelector","selectFilter","onChange","value","target","setFilter","trim","pattern","title","contacts","selectFilteredContacts","useEffect","fetchAllContacts","_Fragment","FilterInput","length","map","ContactItem","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","selectContacts","handleChange","reset","onSubmit","e","preventDefault","some","contact","toLowerCase","window","alert","concat","addContact","htmlFor","required","isLoggedIn","selectIsLoggedIn","navigate","useNavigate","Form","ContactList","ToastContainer"],"sourceRoot":""}